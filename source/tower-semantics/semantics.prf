(semantics
 (clkMsg_TCC1 0
  (clkMsg_TCC1-1 nil 3642208614
   ("" (use "Msg_nonempty")
    (("" (inst + "LAMBDA (x:Msg) : True") nil nil)) nil)
   ((Msg nonempty-type-decl nil semantics nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (pred type-eq-decl nil defined_types nil)
    (nonempty_pred type-eq-decl nil orders nil)
    (TRUE const-decl "bool" booleans nil)
    (Msg_nonempty formula-decl nil semantics nil))
   nil))
 (fromEvent_TCC1 0
  (fromEvent_TCC1-1 nil 3641956679
   ("" (use "real_nonempty")
    (("" (inst + "LAMBDA (x : Event) : 0") nil nil)) nil)
   ((number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (Event type-eq-decl nil semantics nil)
    (Time type-eq-decl nil semantics nil)
    (real_nonempty formula-decl nil reals nil))
   shostak))
 (rnd_TCC1 0
  (rnd_TCC1-1 nil 3641836374 ("" (tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (Event type-eq-decl nil semantics nil)
    (Time type-eq-decl nil semantics nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil))
   shostak))
 (rnd_TCC2 0
  (rnd_TCC2-1 nil 3641836374 ("" (tcc) nil nil) nil shostak))
 (stutterState_LEM_TCC1 0
  (stutterState_LEM_TCC1-1 nil 3642208614 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (Event type-eq-decl nil semantics nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil))
   nil))
 (stutterState_LEM 0
  (stutterState_LEM-1 nil 3642209292
   ("" (skolem!)
    (("" (flatten)
      (("" (expand "rnd" 2 1)
        (("" (assert)
          (("" (lemma "stutterState_AX")
            (("" (inst - "rx!1" _)
              ((""
                (replace-extensionality "LAMBDA (c0: InChan(rx!1)), s:
                   update(rx!1, s, inMsg(fromEvent(v!1), rx!1, c0))"
                 "LAMBDA (c0: InChan(rx!1)), s : s")
                (("1" (use "fold_AX") nil nil)
                 ("2" (hide 3)
                  (("2" (inst -2 "x!1")
                    (("2" (inst -1 "x!2") (("2" (assert) nil nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((int_minus_int_is_int application-judgement "int" integers nil)
    (Proc nonempty-type-decl nil semantics nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (fold_AX formula-decl nil semantics nil)
    (Msg nonempty-type-decl nil semantics nil)
    (update const-decl "State" semantics nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (Time type-eq-decl nil semantics nil)
    (inMsg const-decl "Msg" semantics nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (Event type-eq-decl nil semantics nil)
    (fromEvent const-decl "Time" semantics nil)
    (State nonempty-type-decl nil semantics nil)
    (InChan type-eq-decl nil semantics nil)
    (inChan const-decl "pred[Chan]" semantics nil)
    (pred type-eq-decl nil defined_types nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (Chan nonempty-type-decl nil semantics nil)
    (stutterState_AX formula-decl nil semantics nil)
    (rnd def-decl "State" semantics nil))
   shostak)))
(semantics_interp
 (IMP_semantics_TCC1 0
  (IMP_semantics_TCC1-1 nil 3642346111 ("" (tcc)) nil shostak))
 (IMP_semantics_TCC2 0
  (IMP_semantics_TCC2-1 nil 3642361152 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (<= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (Proc type-eq-decl nil semantics_interp nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (Chan type-eq-decl nil semantics_interp nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil))
   nil))
 (IMP_semantics_Chan_nonempty_TCC1 0
  (IMP_semantics_Chan_nonempty_TCC1-1 nil 3642348292
   ("" (inst + "0") nil nil)
   ((Chan type-eq-decl nil semantics_interp nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil))
   shostak))
 (IMP_semantics_Proc_nonempty_TCC1 0
  (IMP_semantics_Proc_nonempty_TCC1-1 nil 3642350775
   ("" (inst + "0") nil nil)
   ((Proc type-eq-decl nil semantics_interp nil)
    (<= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil))
   shostak))
 (IMP_semantics_fold_AX_TCC1 0
  (IMP_semantics_fold_AX_TCC1-1 nil 3642346111 ("" (tcc)) nil nil))
 (IMP_semantics_inMsg_AX_TCC1 0
  (IMP_semantics_inMsg_AX_TCC1-1 nil 3642346111
   ("" (mapped-axiom-tcc) nil nil) nil shostak)))

